version: '3.3'

services:
  db:
    image: percona
    container_name: 'globosphere_db'
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ${DB_DATA_PATH}:/var/lib/mysql
    ports:
      - 3309:3306
#    ports:
#      - ${DB_PORT}:${DB_PORT_CONTAINER}

  adminer:
    image: adminer
    restart: always
    ports:
      - 8088:8080

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.3
    container_name: 'globosphere_es'
    environment:
      - discovery.type=single-node
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - http.cors.enabled=true
      - http.cors.allow-origin=*
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data:/usr/share/elasticsearch/data
    ports:
      - ${ELASTICSEARCH_PORT}:9200
#    networks:
#      - elastic

  app-fpm:
    container_name: 'globosphere_php_fpm'
    build:
      context: ./docker/dev
      dockerfile: php-fpm.docker
    restart: unless-stopped
    volumes:
      - "./app/:/app"
      - "composer:/root/.composer/cache"
    depends_on:
      - db
  app-cli:
    container_name: 'globosphere_php_cli'
    build:
      context: ./docker/dev
      dockerfile: php-cli.docker
    restart: unless-stopped
    volumes:
      #           - "./app/:/app"
      - "./app/:/app:cached"
      - "composer:/root/.composer/cache"
    depends_on:
      - db
#  nginx:
#    container_name: 'globosphere_nginx'
#    build:
#      context: ./docker/dev
#      dockerfile: nginx.docker
#    restart: unless-stopped
#    volumes:
#      - "./html:/app/html"
#    ports:
#      - 8080:80
#    depends_on:
#      - app-fpm

volumes:
  data:
    driver: local
  database:
  composer:
